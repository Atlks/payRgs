#服务器端口
server:
  port: 10008
#mybatis:
#  mapper-locations: classpath:/mapper/*.xml
#  type-aliases-package: com.top.xiaoyu.run.service.auth.mapper
#MyBatis
mybatisPlus:
  mapperLocations: classpath*:/mapper/**/*.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.top.xiaoyu.run.service.auth.entity
  # 支持统配符 * 或者 ; 分割
  typeEnumsPackage: com.top.xiaoyu.run.service.auth.enums
  globalConfig:
    banner: false
    dbConfig:
      #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
      insertStrategy: 'NOT_NULL' #默认就是NOT_NULL
      #驼峰下划线转换
      tableUnderline: true #默认就是true
  configuration:
    mapUnderscoreToCamelCase: true
    cacheEnabled: false

eureka:
  instance:
    prefer-ip-address: ${EUREKA_INSTANCE_PREFER_IP_ADDRESS:true}
    lease-renewal-interval-in-seconds: ${EUREKA_INSTANCE_LEASE_RENEWAL_INTERVAL_IN_SECONDS:30}
  client:
    #从eureka服务器注册表中获取注册信息的时间间隔（s），默认为30秒
    registryFetchIntervalSeconds: 10
    #复制实例变化信息到eureka服务器所需要的时间间隔（s），默认为30秒
    instanceInfoReplicationIntervalSeconds: 10
    #最初复制实例信息到eureka服务器所需的时间（s），默认为40秒
    initialInstanceInfoReplicationIntervalSeconds: 15
    #询问Eureka服务url信息变化的时间间隔（s），默认为300秒
    eurekaServiceUrlPollIntervalSeconds: 10
    register-with-eureka: ${EUREKA_CLIENT_REGISTER_WITH_EUREKA:true}
    fetch-registry: ${EUREKA_CLIENT_FETCH_REGISTRY:true}
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE}


spring:
  cloud:
    inetutils:
      #强制仅使用站点本地地址
      useOnlySiteLocalInterfaces: true
      #强制使用正则表达式列表中指定的网络地址
      preferredNetworks:
        - 10.42.0
    stream:
      rocketmq:
        binder:
          name-server: ${ROCKETMQ_NAME_SERVER}
        bindings:
          user_to_finance_input:
            consumer:
              orderly: false
          agent_to_finance_input:
            consumer:
              orderly: true
          operate_to_finance_input:
            consumer:
              orderly: true
          threadgame_to_finance_input:
            consumer:
              orderly: true
          activity_to_finance_input:
            consumer:
              orderly: true
          finance_to_user_output:
            producer:
              group: finance_to_user_group
          finance_to_es_output:
            producer:
              group: finance_to_es_group
          finance_to_activity_output:
            producer:
              group: finance_to_activity_group
      bindings:
        user_to_finance_input: # 用户账号注册 接收
          group: user_to_finance_group
          destination: user_to_finance_topic
          content-type: application/json
        agent_to_finance_input: # 领取佣金 接收
          group: agent_to_finance_group
          destination: agent_to_finance_topic
          content-type: application/json
        operate_to_finance_input: # 洗码
          group: operate_to_finance_group
          destination: operate_to_finance_topic
          content-type: application/json
        threadgame_to_finance_input: # 登出游戏， 可用余额累加
          group: threadgame_to_finance_group
          destination: threadgame_to_finance_topic
          content-type: application/json
        activity_to_finance_input: # 活动， 可用余额累加
          group: activity_to_finance_group
          destination: activity_to_finance_topic
          content-type: application/json
        finance_to_user_output: # 发送给用户模块消息
          group: finance_to_user_group
          destination: finance_to_user_topic
          content-type: application/json
        finance_to_es_output: # 发送给ES模块消息
          group: finance_to_es_group
          destination: finance_to_es_topic
          content-type: application/json
        finance_to_activity_output: # 发送给 活动 模块消息
          group: finance_to_activity_group
          destination: finance_to_activity_topic
          content-type: application/json

  datasource:
    url: jdbc:mysql://${MYSQL_SERVER}/platform_finance?useSSL=false&characterEncoding=utf8&useUnicode=true&useLocalSessionState=true&serverTimezone=Asia/Shanghai
    username: ${MYSQL_SERVER_USERNAME}
    password: ${MYSQL_SERVER_PASSWORD}
    druid:
      initialSize: 0
      maxActive: 8
      minIdle: 0
      maxWait: -1
top:
  zookeeper:
    url: ${ZOOKEEPER_SERVER}
  fastdfs:
    enable: true
    url:  ${FASTDFS_SERVER_URL}  #这里是暴露给外部的域名
    pool:
      connectTimeout: 2000
      soTimeout: 3000
      trackerList:
        - ${FASTDFS_TRACKERLIST_1}
  redisson:
    config:
      singleServerConfig:
        idleConnectionTimeout: 10000
        pingTimeout: 1000
        connectTimeout: 10000
        timeout: 3000
        retryAttempts: 3
        retryInterval: 1500
        reconnectionTimeout: 3000
        failedAttempts: 3
        password: ${REDIS_SERVER_PASSWORD}
        subscriptionsPerConnection: 5
        clientName: null
        address: "redis://${REDIS_SERVER}"
        subscriptionConnectionMinimumIdleSize: 1
        subscriptionConnectionPoolSize: 50
        connectionMinimumIdleSize: 32
        connectionPoolSize: 64
        database: 0
        dnsMonitoring: false
        dnsMonitoringInterval: 5000
      ## 16
      threads: 16
      ## 32
      nettyThreads: 32
      ## 默认NIO
      transportMode: NIO

pwd: # 密码key
  mybook: # 我的账本 保险箱密码 支付密码key
    pwdKey: top_dingdian

serviceBalance: # 可用余额新增所有对接系统服务签名key
  order: top_order  # 订单系统, 游戏订单
  user: top_user  # 用户系统
  activity: top_activity # 活动系统

payToken: # 调用支付系统 配置key
  pay: # 支付系统
    sysKey: 666666 #支付系统分配的密钥
    token: 3D0D815327734B24011C46C470504F08 #支付系统分配的token


xxl:
  job:
    ### 执行器通讯TOKEN [选填]：非空时启用；
    accessToken:
    admin:
      ### 调度中心部署跟地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。
      ### 执行器将会使用该地址进行"执行器心跳注册"和"任务结果回调"；为空则关闭自动注册；
      addresses: ${XXL_JOB_ADMIN_URL}
    executor:
      ### 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册
      appname: top-job-executor-finance
      ### 执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，
      ### 该IP不会绑定Host仅作为通讯实用；地址信息用于 "执行器注册" 和 "调度中心请求并触发任务"；
      ip:
      ### 执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；
      port: 20000
      ### 执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；
      logpath: ../logs/top-job/jobhandler
      ### 执行器日志保存天数 [选填] ：值大于3时生效，启用执行器Log文件定期清理功能，否则不生效；
      logretentiondays: 1
